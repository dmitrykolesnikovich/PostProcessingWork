// Copyright 1998-2019 Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	DistanceFieldGlobalIllumination.usf
=============================================================================*/

//#include "Common.ush"
//#include "DeferredShadingCommon.ush"
#include "DistanceFieldLightingShared.glsl"
#include "DistanceFieldAOShared.glsl"
//#include "DynamicLightingCommon.glsl"
#include "DistanceFieldShadowingShared.glsl"

//Buffer<float4> VPLData;

//RWBuffer<uint> RWCulledVPLParameterBuffer;
//RWBuffer<float4> RWCulledVPLData;

layout(binding = 0) uniform samplerBuffer VPLData;

layout(binding = 0, r16ui) uniform uimageBuffer RWCulledVPLParameterBuffer;
layout(binding = 1, rgba16f) uniform imageBuffer RWCulledVPLData;

/*[numthreads(THREADGROUP_TOTALSIZE, 1, 1)]
void CullVPLsForViewCS(
	uint3 GroupId : SV_GroupID,
	uint3 DispatchThreadId : SV_DispatchThreadID,
    uint3 GroupThreadId : SV_GroupThreadID)*/
layout(local_size_x = THREADGROUP_TOTALSIZE, local_size_y = 1, local_size_z = 1) in;
void main()
{
    uint3 GroupId = gl_WorkGroupID;
    uint3 DispatchThreadId = gl_GlobalInvocationID;
    uint3 GroupThreadId = gl_LocalInvocationID;

	uint VPLIndex = DispatchThreadId.x;
	uint NumVPLs = VPLParameterBuffer[1];

	if (VPLIndex < NumVPLs)
	{
		uint SourceIndex = VPLIndex * VPL_DATA_STRIDE;
		float4 BoundingSphere = VPLData[SourceIndex + 0];
		float DistanceToViewSq = dot(View.WorldCameraOrigin - BoundingSphere.xyz, View.WorldCameraOrigin - BoundingSphere.xyz);

		if (DistanceToViewSq < Square(AOMaxViewDistance + BoundingSphere.w)
			&& ViewFrustumIntersectSphere(BoundingSphere.xyz, BoundingSphere.w + AOObjectMaxDistance))
		{
			uint DestStartVPLIndex;
			InterlockedAdd(RWCulledVPLParameterBuffer[1], 1U, DestStartVPLIndex);

			uint DestIndex = DestStartVPLIndex * VPL_DATA_STRIDE;
			RWCulledVPLData[DestIndex + 0] = BoundingSphere;
			RWCulledVPLData[DestIndex + 1] = VPLData[SourceIndex + 1];
			RWCulledVPLData[DestIndex + 2] = VPLData[SourceIndex + 2];
		}
	}
}